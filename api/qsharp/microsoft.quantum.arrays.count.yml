### YamlMime:QSharpType
uid: microsoft.quantum.arrays.count
name: Count
type: function
namespace: microsoft.quantum.arrays
summary: При наличии массива и предиката, определенного для элементов массива, возвращает число элементов массива, состоящего из элементов, которые соответствуют предикату.
remarks: Функция определена для универсальных типов, т. е. при наличии массива `'T[]` и предиката `'T -> Bool` можно фильтровать элементы.
examples: >-
  В следующем коде показана функция "Count".

  Предикат определяется с помощью @"microsoft.quantum.logical.greaterthani" функции:


  ```Q#
   let predicate = GreaterThanI(_, 5);
   let count = Count(predicate, [2, 5, 9, 1, 8]);
   // count = 2
  ```
syntax: "function Count (predicate : ('T -> Bool), array : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: Функция из `'T` в логическое значение, используемое для фильтрации элементов.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: Массив элементов `'T` .
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: Количество элементов в `array` , которые соответствуют предикату.
    isPrimitive: true
    uid: Int
typeParameters:
- uid: "'T"
  summary: Тип `array` элементов.
metadata:
  ms.openlocfilehash: cac44615a0b871cdb33de827d2ff9bc0c08935d3
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91494748"
