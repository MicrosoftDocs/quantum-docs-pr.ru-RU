### YamlMime:QSharpType
uid: microsoft.quantum.arrays.cumulativefolded
name: CumulativeFolded
type: function
namespace: microsoft.quantum.arrays
summary: >-
  Объединяет сопоставленные и объединенные в одну функцию


  Эта функция выполняет итерацию `fn` функции через массив, начиная с начального состояния `state` и возвращающего все промежуточные значения, не включая начальное состояние.
examples: >-
  ```Q#

  // same as sums = [1, 3, 6, 10, 15]

  let sums = CumulativeFolded(PlusI, 0, SequenceI(1, 5));

  ```
syntax: "function CumulativeFolded (fn : (('State, 'T) -> 'State), state : 'State, array : 'T[]) : 'State[]"
input:
  content: "(fn : (('State, 'T) -> 'State), state : 'State, array : 'T[])"
  types:
  - name: fn
    summary: Функция, которая должна быть свернута в массиве
    isFunction: true
    input:
      types:
      - uid: "'State"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'State"
        isLocal: true
  - name: state
    summary: Начальное состояние, которое должно быть сведено
    uid: "'State"
    isLocal: true
  - name: array
    summary: Массив значений для свертывания
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'State[]"
  types:
  - summary: >-
      Все промежуточные состояния, включая конечное состояние, но не начальное состояние.

      Длина выходного массива равна длине `array` .
    isArray: true
    uid: "'State"
    isLocal: true
typeParameters:
- uid: "'State"
  summary: Тип состояний, `fn` в которых работает функция, т. е. принимает в качестве первого входа и возвращает.
- uid: "'T"
  summary: Тип `array` элементов.
metadata:
  ms.openlocfilehash: 02779107bd5556a7f94e8a9ae2798cef98675221
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91494745"
