### YamlMime:QSharpType
uid: microsoft.quantum.canon.multiplexpauli
name: MultiplexPauli
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  Применяет вращение Паули к массиву Кубитс.


  Это применяет операцию, выполняемую после умножения, $U $, которая выполняет повороты с помощью оператора угловой $ \theta_j $ об одном кубит Паули operator $P $ при управлении $n $-кубит Number State $ \кет{ж} $.


  $U = \сум ^ {2 ^ n-1} _ {j = 0} \кет{ж}\бра{ж}\отимес e ^ {i P \theta_j} $ $.
remarks: '`coefficients` будут дополнены элементами $ \theta_j = $0,0, если указано меньше $2 ^ n $.'
syntax: 'operation MultiplexPauli (coefficients : Double[], pauli : Pauli, control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit) : Unit'
input:
  content: '(coefficients : Double[], pauli : Pauli, control : Microsoft.Quantum.Arithmetic.LittleEndian, target : Qubit)'
  types:
  - name: coefficients
    summary: Массив до $2 ^ n $ коэффициенты $ \theta_j $. Коэффициент $j $ TH индексирует числовое состояние $ \кет{ж} $, закодированное в формате с прямым порядком байтов.
    isArray: true
    isPrimitive: true
    uid: Double
  - name: pauli
    summary: Оператор Паули $P $, определяющий ось вращения.
    isPrimitive: true
    uid: Pauli
  - name: control
    summary: $n $-кубит управления регистром, который кодирует числовые состояния $ \кет{ж} $ в формате с прямым порядком байтов.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: Один кубит регистр, повернутый $e ^ {i P \theta_j} $.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: efc5e1cef8574528eeb124100c4d5f875fc2e0e3
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/31/2019
ms.locfileid: "73227752"
