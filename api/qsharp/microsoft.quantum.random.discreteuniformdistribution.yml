### YamlMime:QSharpType
uid: microsoft.quantum.random.discreteuniformdistribution
name: DiscreteUniformDistribution
type: function
namespace: microsoft.quantum.random
summary: Возвращает равномерное распределение по заданному инклюзивному диапазону.
remarks: Завершается ошибкой `max <= min` , если.
examples: >-
  Следующий фрагмент Q # случайным образом выполняет откат шести костей:


  ```Q#

  let dieDistribution = DiscreteUniformDistribution(1, 6);

  let dieRoll = dieDistribution::Sample();

  ```
syntax: 'function DiscreteUniformDistribution (min : Int, max : Int) : Microsoft.Quantum.Random.DiscreteDistribution'
input:
  content: '(min : Int, max : Int)'
  types:
  - name: min
    summary: Наименьшее целое число для рисования.
    isPrimitive: true
    uid: Int
  - name: max
    summary: Максимальное отображаемое целое число.
    isPrimitive: true
    uid: Int
output:
  content: Microsoft.Quantum.Random.DiscreteDistribution
  types:
  - summary: Распределение, случайные вариатес которых являются целыми числами в диапазоне от `min` до `max` с равномерным значением вероятности.
    uid: microsoft.quantum.random.discretedistribution
seeAlso:
- microsoft.quantum.drawrandomdouble
metadata:
  ms.openlocfilehash: 9d9674e5d876117c5c9bbb9edb1a34b93470a96a
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89330945"
