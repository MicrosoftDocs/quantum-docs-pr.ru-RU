### YamlMime:QSharpType
uid: microsoft.quantum.canon.iteratethroughcartesianproduct
name: IterateThroughCartesianProduct
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  Применяет операцию для каждого индекса в декартово произведение нескольких диапазонов.


  Итеративно применяет операцию для каждого элемента декартово произведения `0..(bounds[0] - 1)`, `0..(bounds[1] - 1)`,... `0..(bounds[Length(bounds) - 1] - 1)`
examples: >-
  При `op`операции следующие два фрагмента эквивалентны:


  ```Q#

  IterateThroughCartesianProduct([3, 4, 5], op);

  ```


  ```Q#

  op([0, 0, 0]);

  op([1, 0, 0]);

  op([2, 0, 0]);

  op([0, 1, 0]);

  // ...

  op([0, 3, 0]);

  op([0, 0, 1]);

  //

  op([2, 3, 4]);

  ```
syntax: 'operation IterateThroughCartesianProduct (bounds : Int[], op : (Int[] => Unit)) : Unit'
input:
  content: '(bounds : Int[], op : (Int[] => Unit))'
  types:
  - name: bounds
    summary: Массив, указывающий диапазоны для итерации, при этом каждый диапазон задается как целочисленная длина.
    isArray: true
    isPrimitive: true
    uid: Int
  - name: op
    summary: Операция, вызываемая для каждого элемента данного декартово произведение.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Int
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- microsoft.quantum.canon.iteratethroughcartesianpower
metadata:
  ms.openlocfilehash: 440c120daf8a316dec1fbbab758f4f46a929d6a0
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76871249"
