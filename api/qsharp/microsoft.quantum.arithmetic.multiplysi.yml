### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplysi
name: MultiplySI
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: Произведение целого числа со знаком `xs` с помощью целого числа со знаком `ys` и сохранение результата в `result`, который должен быть равен нулю изначально.
syntax: 'operation MultiplySI (xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian)'
  types:
  - name: xs
    summary: n-разрядный множимое (Сигнедлиттлиндиан)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: ys
    summary: n-разрядный множитель (Сигнедлиттлиндиан)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: result
    summary: 2N-разрядный результат (Сигнедлиттлиндиан) должен находиться в состоянии $ \кет{0}$ изначально.
    uid: microsoft.quantum.arithmetic.signedlittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: 154e870416e47547a115fcc5533d187b3ed67213
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/31/2019
ms.locfileid: "73214815"
