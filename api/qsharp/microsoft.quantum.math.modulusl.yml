### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: Microsoft.Quantum.Math
summary: Вычисление канонического ресидуе `value` `modulus`остаток от деления.
remarks: 'Эта функция ведет себя так же, как оператор `%` ведет себя в C# , и Q # AS в результате всегда является положительным целым числом от 0 до `modulus - 1`, даже если значение отрицательное.'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: Значение, для которого вычислено ресидуе
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Модуль, по которому ресидуес принимаются, должен быть положительным
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: Целочисленное $r $ between 0 и `modulus - 1`, что `value - r` делится по модулю
    isPrimitive: true
    uid: BigInt
ms.openlocfilehash: 14ef3669e4c59912129c9ffac6ecbf1a2ed25534
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/31/2019
ms.locfileid: "73232461"
