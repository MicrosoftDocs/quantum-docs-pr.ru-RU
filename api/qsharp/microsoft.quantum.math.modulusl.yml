### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: microsoft.quantum.math
summary: Вычисление канонического ресидуе `value` остатка от деления `modulus` .
remarks: 'Эта функция ведет себя иначе, чем оператор `%` в C# и Q #, как в результате, всегда является положительным целым числом от 0 до `modulus - 1` , даже если значение отрицательное.'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: Значение, для которого вычислено ресидуе
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Модуль, по которому ресидуес принимаются, должен быть положительным
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: Целое число $r $ от 0 до значения `modulus - 1` , `value - r` кратного модулю
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: 04dfee46752af759bc7d686b58bb6e9c3793c8d4
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89334022"
