### YamlMime:QSharpType
uid: microsoft.quantum.simulation.pauliblockencoding
name: PauliBlockEncoding
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Создает единое блочное кодирование для Хамилтониан.


  Хамилтониан $H = \sum_{j}\alpha_j P_j $ описывается суммой Паули условий $P _j $, каждый с действительным коэффициентом $ \alpha_j $.
remarks: Это достигается путем подготовки и отменяя подготовку состояния $ \ sum_ {j} \ sqrt {\ alpha_j/\ Alpha} \ Сисакет {j} $, а также создания единой <xref:microsoft.quantum.preparation.statepreparationpositivecoefficients> и <xref:microsoft.quantum.canon.multiplexoperationsfromgenerator>с множественным контролем.
syntax: 'function PauliBlockEncoding (generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem) : (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)'
input:
  content: '(generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem)'
  types:
  - name: generatorSystem
    summary: '`GeneratorSystem`, описывающий $H $ как сумму Паули условий.'
    uid: microsoft.quantum.simulation.generatorsystem
output:
  content: (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)
  types:
  - summary: >-
      ## <a name="first-parameter"></a>Первый параметр


      Один из норм коэффициентов $ \алфа = \sum_{j} | \alpha_j | $.


      ## <a name="second-parameter"></a>Второй параметр


      `BlockEncodingReflection` единая $U $ Хамилтониан $H $. Так как это единое значение соответствует $U ^ 2 = I $, это также отражение.
    types:
    - isPrimitive: true
      uid: Double
    - uid: microsoft.quantum.simulation.blockencodingreflection
metadata:
  ms.openlocfilehash: 352ab71457601c38b22e93f706cb59f50bf24151
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73216141"
