### YamlMime:QSharpType
uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: microsoft.quantum.convert
summary: Кодирует оператор Multi-кубит Паули, представленный в виде массива операторов с одним кубит Паули в целое число.
remarks: >-
  Каждый оператор Паули может быть закодирован с использованием двух битов: $ $ \бегин{алигн} \болдоне \мапсто 00, \куад X \мапсто 01, \куад Y \мапсто 11, \куад Z \мапсто 10.

  \енд{алигн} $ $


  При наличии массива операторов Паули `[P0, ..., Pn]` Эта функция возвращает целое число с расширением binary, сформированное путем сцепления сопоставлений каждого оператора Паули в порядке с обратным порядком байтов `bits(Pn) ... bits(P0)` .
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: Массив из не более 31 одного кубит операторов Паули.
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: Целое число, однозначно идентифицирующее `paulis` , как описано ниже.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: c063a622729a55191108a8b0da3fa6f482624eb1
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91482135"
