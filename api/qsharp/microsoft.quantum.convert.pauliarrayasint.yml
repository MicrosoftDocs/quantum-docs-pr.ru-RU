### YamlMime:QSharpType
uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: Microsoft.Quantum.Convert
summary: Кодирует оператор Multi-кубит Паули, представленный в виде массива операторов с одним кубит Паули в целое число.
remarks: >-
  Каждый оператор Паули может быть закодирован с использованием двух битов: $ $ \бегин{алигн} \болдоне \мапсто 00, \куад X \мапсто 01, \куад Y \мапсто 11, \куад Z \мапсто 10.

  \енд{алигн} $ $


  При наличии массива Паули операторов `[P0, ..., Pn]`эта функция возвращает целое число с расширением binary, сформированное путем сцепления сопоставлений каждого оператора Паули в порядке с обратным порядком байтов `bits(Pn) ... bits(P0)`.
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: Массив из не более 31 одного кубит операторов Паули.
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: Целое число, однозначно идентифицирующее `paulis`, как описано ниже.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 0c211075d07147b1c1392fe3f3e4ceb110364bb3
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73230761"
