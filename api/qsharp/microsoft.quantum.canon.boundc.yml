### YamlMime:QSharpType
uid: microsoft.quantum.canon.boundc
name: BoundC
type: function
namespace: microsoft.quantum.canon
summary: >-
  При наличии массива операций, исдействующих один вход, создает новую операцию, которая выполняет каждую заданную операцию последовательно.

  Модификатор `C` указывает, что все операции в массиве являются управляемыми.
examples: >-
  Следующие эквивалентны:


  ```qsharp

  let bound = BoundC([U, V]);

  bound(x);

  ```


  и


  ```qsharp

  U(x); V(x);

  ```
syntax: "function BoundC (operations : ('T => Unit is Ctl)[]) : ('T => Unit is Ctl)"
input:
  content: "(operations : ('T => Unit is Ctl)[])"
  types:
  - name: operations
    summary: Последовательность операций, выполняемых с заданным входом.
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
output:
  content: ('T => Unit is Ctl)
  types:
  - summary: Новая операция, которая выполняет каждую заданную операцию последовательно по входным данным.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
typeParameters:
- uid: "'T"
  summary: Целевой объект, на котором выполняется каждая операция в массиве.
seeAlso:
- microsoft.quantum.canon.bound
metadata:
  ms.openlocfilehash: b2aefcaa3ee32b9a29679fbade2fea5dd5567ee3
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91472261"
