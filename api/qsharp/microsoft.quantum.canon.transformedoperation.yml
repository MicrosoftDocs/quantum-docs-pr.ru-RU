### YamlMime:QSharpType
uid: microsoft.quantum.canon.transformedoperation
name: TransformedOperation
type: function
namespace: Microsoft.Quantum.Canon
summary: При наличии функции и операции возвращает новую операцию, входные данные которой преобразуются в заданную функцию.
examples: >-
  Следующий вызов использует @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" для преобразования операции, предназначенной для @"Microsoft.Quantum.Arithmetic.BigEndian" входных данных, в операцию, которая принимает @"Microsoft.Quantum.Arithmetic.LittleEndian"входные данные типа:


  ```qsharp

  let leOp = TransformedOperation(LittleEndianAsBigEndian, ApplyXorInPlaceBE);

  ```
syntax: "function TransformedOperation (fn : ('U -> 'T), op : ('T => Unit)) : ('U => Unit)"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit))"
  types:
  - name: fn
    summary: Функция, которая преобразует заданные входные данные в форму, ожидаемую операцией.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: Операция для преобразования.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: ('U => Unit)
  types:
  - summary: Новая операция, тбат, `fn` вызывает с входными данными, а затем передает полученный результат в `op`.
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
seeAlso:
- transformedoperationa
- transformedoperationc
- transformedoperationca
- applywithinputtransformation
- compose
metadata:
  ms.openlocfilehash: a2ac6d6682fdbe064e655e5af9a9e8454edac5d3
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82678080"
