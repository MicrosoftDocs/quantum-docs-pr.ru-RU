### YamlMime:QSharpType
uid: microsoft.quantum.canon.transformedoperation
name: TransformedOperation
type: function
namespace: Microsoft.Quantum.Canon
summary: При наличии функции и операции возвращает новую операцию, входные данные которой преобразуются в заданную функцию.
examples: >-
  Следующий вызов использует @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" для преобразования операции, предназначенной для @"Microsoft.Quantum.Arithmetic.BigEndian" входных данных, в операцию, которая принимает входные данные типа @"Microsoft.Quantum.Arithmetic.LittleEndian":


  ```qsharp

  let leOp = TransformedOperation(LittleEndianAsBigEndian, ApplyXorInPlaceBE);

  ```
syntax: "function TransformedOperation (fn : ('U -> 'T), op : ('T => Unit)) : ('U => Unit)"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit))"
  types:
  - name: fn
    summary: Функция, которая преобразует заданные входные данные в форму, ожидаемую операцией.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: Операция для преобразования.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: ('U => Unit)
  types:
  - summary: Новая операция тбат вызывает `fn` со своими входными данными, а затем передает полученный результат в `op`.
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
seeAlso:
- transformedoperationa
- transformedoperationc
- transformedoperationca
- applywithinputtransformation
- compose
ms.openlocfilehash: 8bf89235c2f702ec6cd3a9d8950c13ff6ce8cf8c
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/31/2019
ms.locfileid: "73217110"
