### YamlMime:QSharpType
uid: microsoft.quantum.canon.compose
name: Compose
type: function
namespace: microsoft.quantum.canon
summary: >-
  Возвращает композицию двух функций.


  При наличии двух функций $f $ и $g $ возвращает новую функцию, представляющую $f \Цирк g $.
syntax: "function Compose (outer : ('U -> 'V), inner : ('T -> 'U)) : ('T -> 'V)"
input:
  content: "(outer : ('U -> 'V), inner : ('T -> 'U))"
  types:
  - name: outer
    summary: Вторая функция, которая будет применена.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'V"
        isLocal: true
  - name: inner
    summary: Первая функция, которая будет применена.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'U"
        isLocal: true
output:
  content: ('T -> 'V)
  types:
  - summary: Новая функция $h $ таким, что для всех входных данных $x $, $f (g (x)) = h (x) $.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'V"
        isLocal: true
typeParameters:
- uid: "'T"
  summary: Тип входных данных первой функции, которая должна быть применена.
- uid: "'U"
  summary: Тип выходных данных первой функции, которая будет применена, и тип входных данных второй функции.
- uid: "'V"
  summary: Тип выходных данных второй функции, которая будет применена.
metadata:
  ms.openlocfilehash: f2e4d8d10e8113101a5d0ec1f37f8bb7cd0945c0
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91467177"
