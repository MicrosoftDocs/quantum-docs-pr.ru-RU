### YamlMime:QSharpType
uid: microsoft.quantum.canon.compose
name: Compose
type: function
namespace: Microsoft.Quantum.Canon
summary: >-
  Создает композицию двух функций.


  То есть при наличии двух функций, $f $ и $g $, возвращается новая функция, представляющая $f \Цирк g $.
syntax: "function Compose (outer : ('U -> 'V), inner : ('T -> 'U)) : ('T -> 'V)"
input:
  content: "(outer : ('U -> 'V), inner : ('T -> 'U))"
  types:
  - name: outer
    summary: Вторая функция, которая будет применена.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'V"
        isLocal: true
  - name: inner
    summary: Первая функция, которая будет применена.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'U"
        isLocal: true
output:
  content: ('T -> 'V)
  types:
  - summary: Новая функция $h $ таким, что для всех входных данных $x $, $f (g (x)) = h (x) $.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'V"
        isLocal: true
typeParameters:
- uid: "'T"
  summary: Тип входных данных первой функции, которая должна быть применена.
- uid: "'U"
  summary: Тип выходных данных первой функции, которая будет применена, и тип входных данных второй функции.
- uid: "'V"
  summary: Тип выходных данных второй функции, которая будет применена.
ms.openlocfilehash: 69fbd6a4fafbc61a63e41257b7100303fd48d4d4
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ru-RU
ms.lasthandoff: 10/31/2019
ms.locfileid: "73223077"
