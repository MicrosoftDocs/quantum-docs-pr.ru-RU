### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
name: MultiplyAndAddPhaseByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: То же, что и Мултипляндаддбимодуларинтежер, но предполагает, что слагаемому кодирует целые числа в Кфт.
remarks: >-
  Предполагается, что `phaseSummand` имеет наивысший бит, равный 0.

  Также предполагается, что значение `phaseSummand` меньше $N $.
syntax: 'operation MultiplyAndAddPhaseByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Модуль $N $, для которого выполняется сложение и умножение, относительно.
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: Регистр такта, представляющий целое число без знака, значение которого добавляется к каждой метке состояния базы `summand` .
    uid: microsoft.quantum.arithmetic.littleendian
  - name: phaseSummand
    summary: Регистр такта, представляющий целое число без знака, которое будет использоваться в качестве целевого объекта для данной операции.
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
metadata:
  ms.openlocfilehash: fea0d8913537f70af572a748dfba6a7a171750f8
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91476766"
