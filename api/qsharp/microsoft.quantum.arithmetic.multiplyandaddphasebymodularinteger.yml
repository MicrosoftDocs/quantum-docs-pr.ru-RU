### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
name: MultiplyAndAddPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: То же, что и Мултипляндаддбимодуларинтежер, но предполагает, что слагаемому кодирует целые числа в Кфт.
remarks: >-
  Предполагается `phaseSummand` , что имеет наивысший бит, равный 0.

  Также предполагается, что значение `phaseSummand` меньше $N $.
syntax: 'operation MultiplyAndAddPhaseByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Модуль $N $, для которого выполняется сложение и умножение, относительно.
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: Регистр такта, представляющий целое число без знака, значение которого добавляется к каждой метке состояния базы `summand`.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: phaseSummand
    summary: Регистр такта, представляющий целое число без знака, которое будет использоваться в качестве целевого объекта для данной операции.
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
metadata:
  ms.openlocfilehash: 029ff8fb767ae018b7462f19a5fe09e83e606c6e
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672799"
