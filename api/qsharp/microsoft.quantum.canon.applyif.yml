### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyif
name: ApplyIf
type: operation
namespace: microsoft.quantum.canon
summary: >-
  Применяет операцию с условием на Классический бит.


  При наличии операции `op` и битового значения `bit` применяется `op` к, `target` Если имеет `bit` значение `true` . Если значение `false` равно, то ничего не происходит с `target` .
examples: >-
  Следующий командлет готовит регистр Кубитс в вычислительное состояние, представленное классическим битом строки, заданным как массив `Bool` значений:


  ```Q#

  let bitstring = [true, false, true];

  using (register = Qubit(3)) {
      ApplyToEach(ApplyIf(X, _, _), Zipped(bitstring, register));
      // register should now be in the state |101⟩.
      ...
  }

  ```
syntax: "operation ApplyIf (op : ('T => Unit), bit : Bool, target : 'T) : Unit"
input:
  content: "(op : ('T => Unit), bit : Bool, target : 'T)"
  types:
  - name: op
    summary: Операция, применяемая к условию.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: bit
    summary: Логическое значение, определяющее, применяется ли оператор Op.
    isPrimitive: true
    uid: Bool
  - name: target
    summary: Входные данные, к которым применяется операция.
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: Тип входных данных операции, которая должна применяться условно.
seeAlso:
- microsoft.quantum.canon.applyifc
- microsoft.quantum.canon.applyifa
- microsoft.quantum.canon.applyifca
metadata:
  ms.openlocfilehash: 70c63cb7a7e7f1818a2961825ca14309360eb225
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91473383"
