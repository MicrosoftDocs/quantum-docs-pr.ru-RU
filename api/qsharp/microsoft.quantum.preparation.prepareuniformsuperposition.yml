### YamlMime:QSharpType
uid: microsoft.quantum.preparation.prepareuniformsuperposition
name: PrepareUniformSuperposition
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  Создает равномерное перестановку по состояниям, которые кодируются от 0 до `nIndices`.


  То есть, это единое $U $ создает равномерное перестановку для всех состояний $0 $ в $M-$1, учитывая входное состояние $ \ket{0\cdots 0} $. Иными словами, $ $ \бегин{алигн} У\кет{0}= \фрак{1}{\sqrt{M}}\sum_{j = 0} ^ {M-1} \кет{ж}.

  \енд{алигн} $ $.
examples: >-
  В следующем примере подготавливается состояние $ \фрак{1}{\скрт{6}} \sum_{j = 0} ^{5}\кет{ж} $ on $3 $ Кубитс.


  ```Q#

  let nIndices = 6;

  using(indexRegister = Qubit[3]) {
      PrepareUniformSuperposition(nIndices, LittleEndian(indexRegister));
  }

  ```
syntax: 'operation PrepareUniformSuperposition (nIndices : Int, indexRegister : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(nIndices : Int, indexRegister : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: nIndices
    summary: Требуемое число Штатов $M $ в равномерном положении.
    isPrimitive: true
    uid: Int
  - name: indexRegister
    summary: >-
      Регистр кубит, в котором хранятся числовые состояния в `LittleEndian`ном формате.

      Этот регистр должен иметь возможность хранить число $M-$1, а предполагается, что оно инициализировано в состоянии $ \ket{0\cdots 0} $.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 4bb7c83382f8d48f132fbd91acfd2184a570aea4
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73226494"
