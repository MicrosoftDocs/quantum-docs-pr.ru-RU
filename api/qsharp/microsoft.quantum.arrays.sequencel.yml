### YamlMime:QSharpType
uid: microsoft.quantum.arrays.sequencel
name: SequenceL
type: function
namespace: microsoft.quantum.arrays
summary: Получение массива целых чисел в заданном интервале.
remarks: Разница между `from` и `to` должна соответствовать `Int` значению.
examples: >-
  ```qsharp

  let arr1 = SequenceL(0L, 3L); // [0L, 1L, 2L, 3L]

  let arr2 = SequenceL(23L, 29L); // [23L, 24L, 25L, 26L, 27L, 28L, 29L]

  let arr3 = SequenceL(-5L, -2L); // [-5L, -4L, -3L, -2L]

  ```
syntax: 'function SequenceL (from : BigInt, to : BigInt) : BigInt[]'
input:
  content: '(from : BigInt, to : BigInt)'
  types:
  - name: from
    summary: Инклюзивный начальный индекс интервала.
    isPrimitive: true
    uid: BigInt
  - name: to
    summary: Включающий Конечный индекс интервала, который не меньше `from` .
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt[]
  types:
  - summary: Массив, содержащий последовательность чисел `from` , `from + 1` ,..., `to` .
    isArray: true
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: c39259d5c39ff523464b1defc3c29c7dca6551ee
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89351668"
