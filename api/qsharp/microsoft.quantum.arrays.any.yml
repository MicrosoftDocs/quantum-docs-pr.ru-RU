### YamlMime:QSharpType
uid: microsoft.quantum.arrays.any
name: Any
type: function
namespace: microsoft.quantum.arrays
summary: При наличии массива и предиката, определенного для элементов массива, проверяет, удовлетворяет ли предикату хотя бы один элемент массива.
remarks: "Функция определена для универсальных типов, т. е. при наличии массива `'T[]` и функции `predicate: 'T -> Bool` мы можем получить `Bool` значение, которое указывает, удовлетворяет ли какой-либо элемент `predicate` ."
examples: >-
  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function IsThreePresent() : Bool {
      let arrayOfInts = [1, 2, 3, 4, 5];
      let is3Present = IsNumberPresentInArray(3, arrayOfInts);
      return is3Present;
  }


  function IsNumberPresentInArray(n : Int, array : Int[]) : Bool {
      return Any(EqualI(_, n), array);
  }

  ```
syntax: "function Any (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: Функция из `'T` в `Bool` , используемая для проверки элементов.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: Массив элементов `'T` .
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: '`Bool`Значение функции или предиката, применяемого ко всем элементам.'
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: Тип `array` элементов.
metadata:
  ms.openlocfilehash: eb61be88ccba6392ca70c75f6c506b9b6c1c8bbd
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352603"
