### YamlMime:QSharpType
uid: microsoft.quantum.random.categoricaldistribution
name: CategoricalDistribution
type: function
namespace: Microsoft.Quantum.Random
summary: Возвращает дискретное распределение по категориям, в котором явно задана вероятность для каждого конечного списка заданных результатов.
examples: >-
  В следующем коде Q # отображается 0 с вероятностью 30% и 1 с вероятностью 70%:


  ```Q#

  let dist = CategoricalDistribution([0.3, 0.7]);

  Message($"Got sample: {dist::Sample()}");

  ```
syntax: 'function CategoricalDistribution (probs : Double[]) : Microsoft.Quantum.Random.DiscreteDistribution'
input:
  content: '(probs : Double[])'
  types:
  - name: probs
    summary: >-
      Вероятности для каждого результата из распределения по категориям.

      Эти вероятности не могут быть нормализованы, но должны быть не отрицательными.
    isArray: true
    isPrimitive: true
    uid: Double
output:
  content: Microsoft.Quantum.Random.DiscreteDistribution
  types:
  - summary: Индекс `i` с вероятностью `probs[i] / sum` , где `sum` — Сумма, `probs` заданная параметром `Fold(PlusD, 0.0, probs)` .
    uid: microsoft.quantum.random.discretedistribution
metadata:
  ms.openlocfilehash: e81b286a1268e9ad1819a8f77bb375760f95af71
  ms.sourcegitcommit: 75c4edc7c410cc63dc8352e2a5bef44b433ed188
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 08/25/2020
  ms.locfileid: "88864571"
