### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.applyxorinplace
name: ApplyXorInPlace
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  Применяет операцию побитового исключающего XOR между классическим целым числом и целым числом, представленным регистром Кубитс.


  Применяет `X` операции к Кубитс в регистре с прямым порядком следования на основе 1 битов в целом.


  Давайте обстоится в `value` , а y — это целое число без знака, закодированное в `target` , а затем `InPlaceXorLE` выполняет операцию, указанную в следующем сопоставлении: $ \кет{и}\ригхтарров \кет{и\оплус a} $, где $ \оплус $ является побитовым ИСКЛЮЧАЮЩИМ оператором или.
syntax: 'operation ApplyXorInPlace (value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(value : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: value
    summary: Целочисленное значение, которое считается неотрицательным.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Регистр такта, который используется для хранения `value` в кодировке с прямым порядком байтов.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 40eb358b0687f289eb5c97977e1b7a83e3bb74ef
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91463184"
