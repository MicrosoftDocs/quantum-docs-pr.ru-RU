### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplybymodularinteger
name: MultiplyByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Выполняет модульное умножение с помощью целочисленной константы в регистре кубит.


  Обратите внимание, `modulus` $N $ и `constMultiplier` с $a $.

  Затем эта операция реализует единую операцию, определенную следующей картой на основе вычислений: $ $ \бегин{алигн} \кет{и} \мапсто \кет{(a \кдот y) \операторнаме{мод} N} \енд{алигн} $ $ для всех $y $ между $0 $ и $N-$1.
remarks: >-
  - Схема канала и описание см. на рис. 7 на [стр. 8 из арксив: Куант-pH/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=8)

  - Эта операция соответствует U ₐ в [арксив: Куант-pH/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf)
syntax: 'operation MultiplyByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: constMultiplier
    summary: Константа, на которую умножается множитель. Должно быть состоять в виде модуля.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Операция умножения выполняется по модулю `modulus`.
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: >-
      Число, умноженное на константу.

      Это массив из Кубитс кодирования целого числа в формате с прямым порядком байтов.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 49d46d1dda5afaf4a35667ec98d24aeb51beba1f
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76871385"
