### YamlMime:QSharpType
uid: microsoft.quantum.arrays.indexof
name: IndexOf
type: function
namespace: microsoft.quantum.arrays
summary: Возвращает первый индекс первого элемента в массиве, удовлетворяющего заданному предикату. Если такого элемента не существует, возвращает значение-1.
examples: >-
  Предположим, что `IsEven : Int -> Bool` это функция, которая возвращает значение, `true` только если входные данные являются четными. Затем это можно использовать с `IndexOf` для поиска первого четного элемента в массиве:


  ```Q#

  let items = [1, 3, 17, 2, 21];

  let idx = IndexOf(IsEven, items); // returns 3

  ```
syntax: "function IndexOf (predicate : ('T -> Bool), arr : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), arr : 'T[])"
  types:
  - name: predicate
    summary: Функция предиката, действующая на элементы массива.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: arr
    summary: Массив для поиска с использованием заданного предиката.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: Наименьший индекс, `idx` такой как `predicate(arr[idx])` true, или-1, если такого элемента не существует.
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 54cf5cddff7f0b50416599d798c37047ebfcd2a9
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91475236"
