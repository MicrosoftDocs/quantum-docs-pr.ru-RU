### YamlMime:QSharpType
uid: microsoft.quantum.preparation.statepreparationcomplexcoefficients
name: StatePreparationComplexCoefficients
type: function
namespace: microsoft.quantum.preparation
summary: >-
  Возвращает операцию, которая готовит определенное состояние такта.


  Возвращенная операция $U $ подготавливает произвольное состояние такта $ \кет{\пси} $ с сложными коэффициентами $r _j e ^ {i t_j} $ из $n $-кубит вычислительного состояния $ \ket{0...0} $.


  Действие U для вновь выделенной регистрации задается параметром $ $ \бегин{алигн} У\кет {0... 0} = \кет{\пси} = \фрак{\ sum_ {j = 0} ^ {2 ^ n-1} r_j e ^ {i t_j} \кет{ж}}{\скрт{\ sum_ {j = 0} ^ {2 ^ n-1} | r_j | ^ 2}}.

  \енд{алигн} $ $
remarks: Отрицательные коэффициенты ввода $r _j < $0 будут рассматриваться как положительные значения $ | r_j | $. `coefficients` будет дополнен элементами $ (r_j, t_j) = (0,0, 0,0) $, если указано меньше $2 ^ n $.
examples: >-
  Следующий фрагмент подготавливает состояние такта $ \кет{\пси} = e ^ {i 0,1} \ sqrt {1/8} \ Сисакет {0} + \ sqrt {7/8} \ Сисакет {2} $ в регистре кубит `qubitsLE` .


  ```qsharp

  let amplitudes = [Sqrt(0.125), 0.0, Sqrt(0.875), 0.0];

  let phases = [0.1, 0.0, 0.0, 0.0];

  mutable complexNumbers = new ComplexPolar[4];

  for (idx in 0..3) {
      set complexNumbers[idx] = ComplexPolar(amplitudes[idx], phases[idx]);
  }

  let op = StatePreparationComplexCoefficients(complexNumbers);

  using (qubits = Qubit[2]) {
      let qubitsLE = LittleEndian(qubits);
      op(qubitsLE);
  }

  ```
syntax: 'function StatePreparationComplexCoefficients (coefficients : Microsoft.Quantum.Math.ComplexPolar[]) : (Microsoft.Quantum.Arithmetic.LittleEndian => Unit is Adj + Ctl)'
input:
  content: '(coefficients : Microsoft.Quantum.Math.ComplexPolar[])'
  types:
  - name: coefficients
    summary: Массив до $2 ^ n $ сложных коэффициентов, представленных абсолютным значением и фазой $ (r_j, t_j) $. Коэффициент $j $ TH индексирует числовое состояние $ \кет{ж} $, закодированное в формате с прямым порядком байтов.
    isArray: true
    uid: microsoft.quantum.math.complexpolar
output:
  content: (Microsoft.Quantum.Arithmetic.LittleEndian => Unit is Adj + Ctl)
  types:
  - summary: Единая операция подготовки состояния $U $.
    isOperation: true
    input:
      types:
      - uid: microsoft.quantum.arithmetic.littleendian
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: f7726320e4e1c5da3cb18b9bc34e4e861000aa33
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89331217"
